package search

import (
	"cvepack/core/osv"
	"encoding/json"
	"fmt"
	"strings"
)

type PackageVulnerability struct {
	Id                  int
	VulnerabilityId     string
	PackageEcosystem    string
	PackageName         string
	VersionIntroduced   string
	VersionFixed        *string
	VersionLastAffected *string
	Summary             string
	Details             string
	Aliases             []byte
	DatabaseSpecific    []byte
}

func (p *PackageVulnerability) AliasesParsed() []string {
	var result []string
	err := json.Unmarshal(p.Aliases, &result)
	if err != nil {
		fmt.Println("error while unmarshalling aliases: ", err)
	}
	return result
}

func (p *PackageVulnerability) AliasesToString() string {
	return strings.Join(p.AliasesParsed(), ", ")
}

func (p *PackageVulnerability) DatabaseSpecificParsed() osv.DatabaseSpecific {
	var result osv.DatabaseSpecific
	err := json.Unmarshal(p.DatabaseSpecific, &result)
	if err != nil {
		fmt.Println("error while unmarshalling database specific: ", err)
	}
	return result
}

func (p *PackageVulnerability) SeverityLevel() string {
	return p.DatabaseSpecificParsed().Severity
}
